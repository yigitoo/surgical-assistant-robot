

	
	THE MOST IMPORTANT WARNINGS:
		The joint state values gathered from SensorInterface are reversed. The underlying reason is that the motors are not produced considering the right hand rule of the motion.
		Deciding the rotating axis as X, positive rotation of motor is opposite side of right hand rotation.But the theoric values computed using the right hand rule. Therefore applying
		torque commands has to be applied reversely. Also, the angles must be provided reversely to the KinematicsInterface.
		ALSO, the assembly of the third joint is reversed. This means the sensor values of it, can be applied directly to the KinematicsInterface.
					

	Hardware:
		Critical:
			- The extreme load in the first Kinova - K58 motor is critical. As the K58 specification, this actuator has 7.4Nm peak torque.
			However, the estimated values show that the load on the first rotatable joint is between -8.5 Nm to 8.5 Nm.
			Although this motor controls the system for now, the overload issue may lead overheating and burning problems.

			The improvement idea:
				- At least, the first rotating joint must be replaced with Kinova K-78 motor. Having a 34 Nm peak torque value, this actuator
			will solve the problem forever.
			
		Optional:
			- An external brake system can be implemented to the robot. Either mechanic or electronic brake application can solve the sliding problems.
			
	Software:
		Critical:
			- Currently, emergency button and emergency mode works well, however, rarely, the robot can switch a undeterministic mode. The problem lies inside
			the Graphical User Interface. 
			Normally, GUI has to give sequential commands which means the deterministic and invariant type of control. It means the switch between torque, velocity
			or position commands inspected and controlled strictly. But since GUI is in beta version, the switch between different type of commands are possible due
			to lack of sequential software. Either limiting the GUI or implementing external control blocks, can solve problem.
		Optional:
			- The visualization interface has not implemented because of change of the model files of the robot. Optionally, this can be coded into VisualizationInterface
			after modifying the robot model files. 
			
			- Also there is MoveIt integration of the robot provides only visual feedback. After applying the fixes explained above, the MoveIt can provide 
			trajectory generator function to the robot. 
			

		
